<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="GI.Window.Style" TargetType="{x:Type Window}">
        <!--<Setter Property="Background" Value="{DynamicResource GI.MainWindow.Effect.Shadow.Default}"/>-->
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="FontFamily" Value="Microsoft YaHei UI"/>
        <!--<Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" Value="{DynamicResource GI.MainWindow.Effect.Shadow.Focus}"/>
            </Trigger>
        </Style.Triggers>-->
    </Style>
    <Style x:Key="GI.Window.Head.Style" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource GI.Colors.Head.linear}"/>
    </Style>
    <Style x:Key="GI.Window.Head.Logo.Style" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource GI.Window.Head.Logo}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <!--<Setter Property="Effect" Value="{DynamicResource GI.Effect.Shadow.Global}"/>-->
    </Style>
    <Style x:Key="GI.Window.Head.Back.Style" TargetType="{x:Type Rectangle}">
        <Setter Property="Fill" Value="{DynamicResource GI.Window.Head.Back.Default}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <!--<Setter Property="Effect" Value="{DynamicResource GI.Effect.Shadow.Global}"/>-->
    </Style>
    <Style x:Key="GI.Window.Head.Title.Style" TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{DynamicResource GI.Detail.Name.Cn}"/>
        <Setter Property="FontFamily" Value="{DynamicResource GI.Head.Title.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource GI.Head.Title.FontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource GI.Colors.Font.Head}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <!--<Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />-->
        <!--<Setter Property="Effect" Value="{DynamicResource GI.Effect.Shadow.Global}"/>-->
    </Style>
    <Style x:Key="GI.Window.Head.SubTitle.Style" TargetType="{x:Type TextBlock}">
        <Setter Property="Text" Value="{DynamicResource GI.Detail.Name.En}"/>
        <Setter Property="FontFamily" Value="{DynamicResource GI.Head.SubTitle.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource GI.Head.SubTitle.FontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource GI.Colors.Font.Head}"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <!--<Setter Property="Effect" Value="{DynamicResource GI.Effect.Shadow.Global}"/>-->
    </Style>
    <Style x:Key="GI.Window.Head.Close.Style" TargetType="Button">
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Foreground" Value="{StaticResource GI.Colors.Font.Head}"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Rectangle x:Name="windowHeadClose" Width="11" Height="11" RenderTransformOrigin="0.5,0.5" >
                            <Rectangle.Fill>
                                <DrawingBrush Stretch="Uniform">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <DrawingGroup.Children>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 0,1.33333L 1.33333,1.33333L 1.33333,0L 0,0L 0,1.33333 Z " />
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 1.33333,2.66667L 2.66667,2.66667L 2.66667,1.33333L 1.33333,1.33333L 1.33333,2.66667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 2.66667,4L 4,4L 4,2.66667L 2.66667,2.66667L 2.66667,4 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 4,5.33333L 5.33467,5.33333L 5.33467,4L 4,4L 4,5.33333 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 5.33333,6.66667L 6.66667,6.66667L 6.66667,5.33333L 5.33333,5.33333L 5.33333,6.66667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 6.66667,8L 8,8L 8,6.66667L 6.66667,6.66667L 6.66667,8 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 8,9.33333L 9.33333,9.33333L 9.33333,8L 8,8L 8,9.33333 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 9.33333,10.6667L 10.6667,10.6667L 10.6667,9.332L 9.33333,9.332L 9.33333,10.6667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 10.6667,12L 12,12L 12,10.6667L 10.6667,10.6667L 10.6667,12 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 12,13.3333L 13.3333,13.3333L 13.3333,12L 12,12L 12,13.3333 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 13.3333,14.6667L 14.6667,14.6667L 14.6667,13.3333L 13.3333,13.3333L 13.3333,14.6667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 0,14.6667L 1.33333,14.6667L 1.33333,13.3333L 0,13.3333L 0,14.6667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 1.33333,13.3333L 2.66667,13.3333L 2.66667,12L 1.33333,12L 1.33333,13.3333 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 2.66667,12L 4,12L 4,10.6667L 2.66667,10.6667L 2.66667,12 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 4,10.6667L 5.33467,10.6667L 5.33467,9.332L 4,9.332L 4,10.6667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 5.33333,9.33333L 6.66667,9.33333L 6.66667,8L 5.33333,8L 5.33333,9.33333 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 8,6.66667L 9.33333,6.66667L 9.33333,5.33333L 8,5.33333L 8,6.66667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 9.33333,5.33333L 10.6667,5.33333L 10.6667,4L 9.33333,4L 9.33333,5.33333 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 10.6667,4L 12,4L 12,2.66667L 10.6667,2.66667L 10.6667,4 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 12,2.66667L 13.3333,2.66667L 13.3333,1.33333L 12,1.33333L 12,2.66667 Z "/>
                                                <GeometryDrawing Brush="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" Geometry="F1 M 13.3333,1.33333L 14.6667,1.33333L 14.6667,0L 13.3333,0L 13.3333,1.33333 Z "/>
                                            </DrawingGroup.Children>
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="0"/>
                                    <TranslateTransform Y="0" X="0"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadClose" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" To="90" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadClose" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(RotateTransform.Angle)" To="0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadClose" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" To="1" Duration="0:0:0"/>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadClose" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" To="1" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadClose" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.Y)" To="0" Duration="0:0:0"/>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadClose" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[1].(TranslateTransform.X)" To="0" Duration="0:0:0"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GI.Window.Head.Min.Style" TargetType="Button">
        <Setter Property="Focusable" Value="False"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent">
                        <Rectangle x:Name="windowHeadMin" Width="11" Height="11" Fill="{DynamicResource GI.Window.Head.Min}" RenderTransformOrigin="0.5,0.5" >
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <TranslateTransform Y="0" X="0"/>
                                </TransformGroup>
                            </Rectangle.RenderTransform>
                        </Rectangle>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadMin" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="5" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadMin" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="0" Duration="0:0:0.2"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.PreviewMouseDown">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadMin" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="6" Duration="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadMin" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="1" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.PreviewMouseUp">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadMin" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.Y)" To="5" Duration="0:0:0.1"/>
                                    <DoubleAnimation Storyboard.TargetName="windowHeadMin" Storyboard.TargetProperty="(Panel.RenderTransform).(TransformGroup.Children)[0].(TranslateTransform.X)" To="0" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="GI.Window.Body.Style" TargetType="Grid">
        <Setter Property="Background" Value="{DynamicResource GI.Colors.Background}"/>
        <Setter Property="ClipToBounds" Value="True"></Setter>
    </Style>
</ResourceDictionary>